name: Conditional Workflow

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main ]

jobs:
  detect-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.env.outputs.environment }}
    steps:
    - name: Detect environment
      id: env
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "environment=production" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
          echo "environment=staging" >> $GITHUB_OUTPUT
        else
          echo "environment=development" >> $GITHUB_OUTPUT
        fi
        
    - name: Show environment
      run: echo "현재 환경: ${{ steps.env.outputs.environment }}"
      
  deploy:
    needs: detect-environment
    runs-on: ubuntu-latest
    if: needs.detect-environment.outputs.environment != ''
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm install
      
    - name: Run tests
      run: npm test
      
    - name: Deploy to ${{ needs.detect-environment.outputs.environment }}
      run: |
        echo "🚀 ${{ needs.detect-environment.outputs.environment }} 환경에 배포 중..."
        echo "브랜치: ${{ github.ref }}"
        echo "커밋: ${{ github.sha }}"
        
        # 실제 배포 명령어들 (시뮬레이션)
        if [[ "${{ needs.detect-environment.outputs.environment }}" == "production" ]]; then
          echo "⚠️ 프로덕션 배포 - 주의 필요!"
          echo "✅ 프로덕션 배포 시뮬레이션 완료"
        elif [[ "${{ needs.detect-environment.outputs.environment }}" == "staging" ]]; then
          echo "🔧 스테이징 배포 - 테스트 환경"
          echo "✅ 스테이징 배포 시뮬레이션 완료"
        else
          echo "🛠️ 개발 배포 - 개발 환경"
          echo "✅ 개발 배포 시뮬레이션 완료"
        fi
        
        echo "🎉 배포 프로세스 완료!" 